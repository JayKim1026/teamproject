<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.delivery.account">

	<select id="checkIdDupl" resultType="String">
		select acc_id from (
		    select user_id acc_id from tbl_user
		    union
		    select dlvr_id from tbl_deliver)
		where acc_id = #{acc_id}
	</select>
	
	<select id="findAccountId" resultType="String">
		select acc_id 
		from (
		    select user_id acc_id, user_name acc_name, user_email acc_email, user_phone acc_phone from tbl_user
		    union
		    select dlvr_id, dlvr_name, dlvr_email, dlvr_phone from tbl_deliver
		)
		where acc_name = #{acc_name}
		and acc_email = #{acc_email}
		and acc_phone = #{acc_phone}
	</select>
	
	<select id="findAccountPw" resultType="String">
		select acc_pw 
		from (
		    select user_id acc_id, user_pw acc_pw, user_name acc_name, user_email acc_email, user_phone acc_phone from tbl_user
		    union
		    select dlvr_id, dlvr_pw, dlvr_name, dlvr_email, dlvr_phone from tbl_deliver
		)
		where acc_id = #{acc_id}
		and acc_name = #{acc_name}
		and acc_email = #{acc_email}
		and acc_phone = #{acc_phone}
	</select>
	
	<update id="updatePoint">
		declare
			usercount number :=0;
			dlvrcount number :=0;
		begin
			select count(*) into usercount from tbl_user where user_no = #{account_no};
			select count(*) into dlvrcount from tbl_deliver where dlvr_no = #{account_no};
			if (usercount > 0)
			then update tbl_user 
			set user_point = user_point + #{point_score} 
			where user_no = #{account_no};
			elsif (dlvrcount > 0)
			then update tbl_deliver 
			set dlvr_point = dlvr_point + #{point_score} 
			where dlvr_no = #{account_no};
			end if;
		end;
	</update>
	
	<select id="getPointRank" resultType="AccountDto">
		select * from (
		    select acc_no, acc_id, acc_name, p.point_score acc_point, c.code_detail acc_state, rank() over(order by p.point_score desc) point_rank 
		    from (
		        select user_no acc_no, user_id acc_id, user_name acc_name, user_point acc_point, account_state from tbl_user
		        union
		        select dlvr_no, dlvr_id, dlvr_name, dlvr_point, account_state from tbl_deliver) a
		    inner join tbl_code c
		    on a.account_state = c.code_no
		    inner join (
		        select account_no, sum(point_score) point_score 
		        from tbl_point
		        where point_date > trunc(sysdate, 'MM')
		        group by account_no) p
		    on a.acc_no = p.account_no)
		where point_rank &lt;= 3
	</select>
	
</mapper>
